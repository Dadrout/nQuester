import json
import os
from settings import *
from sound_manager import get_sound_manager

class QuestManager:
    def __init__(self):
        self.quests_data = {}
        self.active_quests = {}
        self.completed_quests = []
        self.load_quests()
    
    def load_quests(self):
        """Load quests from JSON file or create default quests"""
        try:
            if os.path.exists('data/quests.json'):
                with open('data/quests.json', 'r', encoding='utf-8') as f:
                    self.quests_data = json.load(f)
            else:
                # Create default quests if file doesn't exist
                self.create_default_quests()
        except:
            self.create_default_quests()
    
    def create_default_quests(self):
        """Create default quests based on design document"""
        self.quests_data = {
            "quest_alikhan_01": {
                "id": "quest_alikhan_01",
                "npc_id": "Alikhan",
                "title": "Swift Debug Showdown",
                "dialogue_start": [
                    "–£ –º–µ–Ω—è –µ—Å—Ç—å –±–∞–≥ –≤ iOS –∫–æ–¥–µ.",
                    "–ù–∞–π–¥–∏ –æ—à–∏–±–∫—É –∑–∞ 15 —Å–µ–∫—É–Ω–¥!"
                ],
                "dialogue_complete": "–û—Ç–ª–∏—á–Ω–æ! Debugging skills –Ω–∞ –≤—ã—Å–æ—Ç–µ!",
                "user_feedback": [
                    "üî• –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –ö–æ–¥ —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ!",
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å —Å iOS! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ–ª—å—à–µ –Ω–µ –∫—Ä–∞—à–∏—Ç—Å—è!",
                    "–ù–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª! Debugging –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ!"
                ],
                "type": "minigame",
                "minigame_id": "swift_debug",
                "reward": {"users": 500, "item": "iOS Certificate"}
            },
            "quest_alibeck_01": {
                "id": "quest_alibeck_01", 
                "npc_id": "Alibeck",
                "title": "Train Your Brain",
                "dialogue_start": [
                    "–í—Ä–µ–º—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å!",
                    "–ü–µ—Ä–µ—Ç–∞—â–∏ –¥–∞–Ω–Ω—ã–µ —Å –∫–æ—Ç–∏–∫–∞–º–∏ –∫ –º–æ–¥–µ–ª–∏."
                ],
                "dialogue_complete": "–ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞! –ö–æ—Ç–∏–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—é—Ç—Å—è –Ω–∞ 99%!",
                "user_feedback": [
                    "ü§ñ AI —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ! –°–ø–∞—Å–∏–±–æ!",
                    "–ú–æ–¥–µ–ª—å —Å—Ç–∞–ª–∞ –Ω–∞–º–Ω–æ–≥–æ —É–º–Ω–µ–µ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                    "–ù–µ–π—Ä–æ—Å–µ—Ç—å —Ç–µ–ø–µ—Ä—å –ø–æ–Ω–∏–º–∞–µ—Ç –∫–æ—Ç–∏–∫–æ–≤ –∫–∞–∫ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π!"
                ],
                "type": "minigame",
                "minigame_id": "ai_training",
                "reward": {"users": 800, "item": "AI Insight"}
            },
            "quest_bahredin_01": {
                "id": "quest_bahredin_01",
                "npc_id": "Bahredin", 
                "title": "Strict Mode Madness",
                "dialogue_start": [
                    "–Ø –Ω–∞—à–µ–ª `any` –≤ –Ω–∞—à–µ–π –∫–æ–¥–æ–≤–æ–π –±–∞–∑–µ.",
                    "–≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—å–±–∞. –≠—Ç–æ –ß–ü. –ò—Å–ø—Ä–∞–≤—å."
                ],
                "dialogue_complete": "–°–ø–∞—Å–∏–±–æ. –ö–æ–¥–æ–≤–∞—è –±–∞–∑–∞ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.",
                "user_feedback": [
                    "üîí TypeScript —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä–æ–≥–∏–π! –°–ø–∞—Å–∏–±–æ –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å!",
                    "–ö–æ–¥ —Å—Ç–∞–ª –Ω–∞–º–Ω–æ–≥–æ –Ω–∞–¥–µ–∂–Ω–µ–µ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                    "–ë–æ–ª—å—à–µ –Ω–∏–∫–∞–∫–∏—Ö any! –ö–æ–¥–æ–≤–∞—è –±–∞–∑–∞ —Å–ø–∞—Å–µ–Ω–∞!"
                ],
                "type": "minigame",
                "minigame_id": "ts_quiz",
                "reward": {"users": 600, "item": "Type Safety Certificate"}
            },
            "quest_bahaudin_01": {
                "id": "quest_bahaudin_01",
                "npc_id": "Bahaudin",
                "title": "Memory Leak Hunter",
                "dialogue_start": [
                    "–°–µ—Ä–≤–µ—Ä –ø–∞–¥–∞–µ—Ç –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.",
                    "–ù–∞–π–¥–∏ —É—Ç–µ—á–∫—É –ø–∞–º—è—Ç–∏ –≤ –∫–æ–¥–µ!"
                ],
                "dialogue_complete": "–°–µ—Ä–≤–µ—Ä —Å—Ç–∞–±–∏–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å!",
                "user_feedback": [
                    "üíæ –°–µ—Ä–≤–µ—Ä –±–æ–ª—å—à–µ –Ω–µ –ø–∞–¥–∞–µ—Ç! –°–ø–∞—Å–∏–±–æ!",
                    "–ü–∞–º—è—Ç—å —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                    "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —á–∞—Å—ã! –ù–∞—Å—Ç–æ—è—â–∏–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª!"
                ],
                "type": "minigame",
                "minigame_id": "memory_leak_hunter",
                "reward": {"users": 400, "item": "Backend Certificate"}
            },
            "quest_gaziz_01": {
                "id": "quest_gaziz_01",
                "npc_id": "Gaziz",
                "title": "React Debug Challenge",
                "dialogue_start": [
                    "React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è.",
                    "–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–æ–ø—Å—ã –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ!"
                ],
                "dialogue_complete": "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! Frontend —Å–ø–∞—Å–µ–Ω!",
                "user_feedback": [
                    "‚öõÔ∏è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ!",
                    "Frontend —Å–ø–∞—Å–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–ª–∞–¥–∫—É!",
                    "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –∫–∞–∫ –Ω–∞–¥–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!"
                ],
                "type": "minigame",
                "minigame_id": "react_debug",
                "reward": {"users": 350, "item": "Frontend Certificate"}
            },
            "quest_shoqan_01": {
                "id": "quest_shoqan_01",
                "npc_id": "Shoqan",
                "title": "Frontend Debug Master",
                "dialogue_start": [
                    "–£ –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º–∞ —Å React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º.",
                    "–ù–∞–π–¥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å –±–∞–≥–∏ –≤ JavaScript –∫–æ–¥–µ!"
                ],
                "dialogue_complete": "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! Frontend dev –Ω–∞ –≤—ã—Å–æ—Ç–µ!",
                "user_feedback": [
                    "‚öõÔ∏è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–µ–ø–µ—Ä—å —Å—Ç–∞–±–∏–ª—å–Ω–æ! –°–ø–∞—Å–∏–±–æ!",
                    "JavaScript –∫–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                    "–ù–∞—Å—Ç–æ—è—â–∏–π frontend —ç–∫—Å–ø–µ—Ä—Ç! –ö–æ–º–ø–æ–Ω–µ–Ω—Ç —Å–ø–∞—Å–µ–Ω!"
                ],
                "type": "minigame",
                "minigame_id": "react_debug",
                "reward": {"users": 450, "item": "Frontend Certificate"}
            },
            "quest_zhasulan_01": {
                "id": "quest_zhasulan_01",
                "npc_id": "Zhasulan",
                "title": "iOS Debug Challenge",
                "dialogue_start": [
                    "–£ –º–µ–Ω—è –ø—Ä–æ–±–ª–µ–º–∞ —Å iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º.",
                    "–ù–∞–π–¥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å –±–∞–≥–∏ –≤ Swift –∫–æ–¥–µ!"
                ],
                "dialogue_complete": "iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                "user_feedback": [
                    "üì± iOS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–µ–ø–µ—Ä—å —Å—Ç–∞–±–∏–ª—å–Ω–æ! –°–ø–∞—Å–∏–±–æ!",
                    "Swift –∫–æ–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                    "–ù–∞—Å—Ç–æ—è—â–∏–π iOS —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–ø–∞—Å–µ–Ω–æ!"
                ],
                "type": "minigame",
                "minigame_id": "swift_debug",
                "reward": {"users": 400, "item": "iOS Certificate"}
            },
            "quest_aimurat_01": {
                "id": "quest_aimurat_01",
                "npc_id": "Aimurat",
                "title": "AI Model Training",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–Ω–æ –æ–±—É—á–∏—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç—å.",
                    "–ü–æ–º–æ–≥–∏ —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–æ–π AI –º–æ–¥–µ–ª–∏!"
                ],
                "dialogue_complete": "–ú–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞! AI —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!",
                "user_feedback": [
                    "ü§ñ AI –º–æ–¥–µ–ª—å –æ–±—É—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –°–ø–∞—Å–∏–±–æ!",
                    "–ù–µ–π—Ä–æ—Å–µ—Ç—å —Ç–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                    "–ù–∞—Å—Ç–æ—è—â–∏–π AI/ML —ç–∫—Å–ø–µ—Ä—Ç! –ú–æ–¥–µ–ª—å —Å–ø–∞—Å–µ–Ω–∞!"
                ],
                "type": "minigame",
                "minigame_id": "ai_training",
                "reward": {"users": 600, "item": "AI Certificate"}
            },
            "quest_bernar_01": {
                "id": "quest_bernar_01",
                "npc_id": "Bernar",
                "title": "BOSS: Final Challenge",
                "dialogue_start": [
                    "–¢—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –≥–æ—Ç–æ–≤ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É –∏—Å–ø—ã—Ç–∞–Ω–∏—é?",
                    "–î–æ–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –¥–æ—Å—Ç–æ–∏–Ω –±—ã—Ç—å –ª—É—á—à–∏–º —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä–æ–º!",
                    "–ü—Ä–æ–π–¥–∏ –≤—Å–µ —ç—Ç–∞–ø—ã: –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –∫–æ–¥–∏–Ω–≥, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ!"
                ],
                "dialogue_complete": "–ò–º–ø—Ä–µ—Å—Å–∏–≤–Ω–æ! –¢—ã –ø—Ä–æ—à–µ–ª —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ!",
                "user_feedback": [
                    "üèÜ –ù–ê–°–¢–û–Ø–©–ò–ô –ë–û–°–°! –¢—ã –ø—Ä–æ—à–µ–ª –≤—Å–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è!",
                    "–¢—ã –¥–æ–∫–∞–∑–∞–ª, —á—Ç–æ –¥–æ—Å—Ç–æ–∏–Ω –±—ã—Ç—å –ª—É—á—à–∏–º —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä–æ–º!",
                    "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –∫–æ–¥–∏–Ω–≥, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ - –≤—Å–µ –Ω–∞ –≤—ã—Å–æ—Ç–µ!",
                    "–ò–Ω–≤–µ—Å—Ç–æ—Ä—ã –±—É–¥—É—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞!"
                ],
                "type": "minigame",
                "minigame_id": "boss_challenge",
                "reward": {"users": 2000, "item": "BOSS Certificate"}
            },
            "quest_final_boss": {
                "id": "quest_final_boss",
                "npc_id": "FinalBoss",
                "title": "–§–ò–ù–ê–õ–¨–ù–´–ô –ë–û–°–°",
                "dialogue_start": [
                    "–¢—ã –¥—É–º–∞–µ—à—å, —á—Ç–æ –≥–æ—Ç–æ–≤ –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –∏—Å–ø—ã—Ç–∞–Ω–∏—é?",
                    "–°—Ç–æ–ª–∫–Ω–∏—Å—å —Å –≥–ª–∞–≤–Ω—ã–º –±–æ—Å—Å–æ–º –≤ —ç–ø–∏—á–µ—Å–∫–æ–π JRPG –±–∏—Ç–≤–µ!",
                    "–ß–µ–º –±–æ–ª—å—à–µ —É —Ç–µ–±—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ç–µ–º —Å–ª–∞–±–µ–µ –±–æ—Å—Å!"
                ],
                "dialogue_complete": "–ù–ï–í–ï–†–û–Ø–¢–ù–û! –¢—ã –ø–æ–±–µ–¥–∏–ª –≥–ª–∞–≤–Ω–æ–≥–æ –±–æ—Å—Å–∞!",
                "user_feedback": [
                    "üèÜ –õ–ï–ì–ï–ù–î–ê! –¢—ã –ø–æ–±–µ–¥–∏–ª –≥–ª–∞–≤–Ω–æ–≥–æ –±–æ—Å—Å–∞!",
                    "–¢—ã –¥–æ–∫–∞–∑–∞–ª, —á—Ç–æ –¥–æ—Å—Ç–æ–∏–Ω –±—ã—Ç—å –ª—É—á—à–∏–º —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä–æ–º!",
                    "JRPG –±–∏—Ç–≤–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –≥–µ—Ä–æ–π!",
                    "–ò–Ω–≤–µ—Å—Ç–æ—Ä—ã –±—É–¥—É—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞!"
                ],
                "type": "boss_battle",
                "reward": {"users": 5000, "item": "Legendary Certificate"}
            },
            "quest_diana_frontend": {
                "id": "quest_diana_frontend",
                "npc_id": "Diana",
                "title": "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–∏–∑–∞–π–Ω–µ—Ä",
                "dialogue_start": [
                    "–ü—Ä–∏–≤–µ—Ç! –Ø Diana, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.",
                    "–ú–Ω–µ –Ω—É–∂–µ–Ω –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.",
                    "–ü—Ä–æ–π–¥–∏ –º–∏–Ω–∏-–∏–≥—Ä—É 'UI/UX –î–∏–∑–∞–π–Ω–µ—Ä' - —Å–æ–∑–¥–∞–π –æ—Ç–∑—ã–≤—á–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å!",
                    "–ü–æ–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å –ø—Ä–∏–Ω—Ü–∏–ø—ã —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞!"
                ],
                "dialogue_complete": "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä!",
                "user_feedback": [
                    "üé® UI/UX –î–ò–ó–ê–ô–ù–ï–†!",
                    "–¢—ã —Å–æ–∑–¥–∞–ª –∫—Ä–∞—Å–∏–≤—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å!",
                    "Diana –¥–æ–≤–æ–ª—å–Ω–∞ —Ç–≤–æ–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏!",
                    "–¢—ã –≥–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π!"
                ],
                "type": "minigame",
                "minigame_id": "ui_designer",
                "reward": {"users": 700, "item": "Frontend Certificate"}
            },
            "quest_tamyrlan_backend": {
                "id": "quest_tamyrlan_backend",
                "npc_id": "Tamyrlan",
                "title": "–ë—ç–∫–µ–Ω–¥ –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä",
                "dialogue_start": [
                    "–ü—Ä–∏–≤–µ—Ç! –Ø Tamyrlan, —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –±—ç–∫–µ–Ω–¥ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ.",
                    "–ú–Ω–µ –Ω—É–∂–µ–Ω –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ–π —Å–∏—Å—Ç–µ–º—ã.",
                    "–ü—Ä–æ–π–¥–∏ –º–∏–Ω–∏-–∏–≥—Ä—É '–ê—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä API' - —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä—É–π REST API!",
                    "–ü–æ–∫–∞–∂–∏, —á—Ç–æ —Ç—ã –ø–æ–Ω–∏–º–∞–µ—à—å –ø—Ä–∏–Ω—Ü–∏–ø—ã –±—ç–∫–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!"
                ],
                "dialogue_complete": "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä!",
                "user_feedback": [
                    "üèóÔ∏è –ê–†–•–ò–¢–ï–ö–¢–û–† API!",
                    "–¢—ã —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–ª –æ—Ç–ª–∏—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É!",
                    "Tamyrlan –¥–æ–≤–æ–ª–µ–Ω —Ç–≤–æ–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏!",
                    "–¢—ã –≥–æ—Ç–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π!"
                ],
                "type": "minigame",
                "minigame_id": "api_architect",
                "reward": {"users": 800, "item": "Backend Certificate"}
            },
            "quest_student_tired": {
                "id": "quest_student_tired",
                "npc_id": "tired_student",
                "title": "Burnout Simulator", 
                "dialogue_start": [
                    "–ö–∞–∂–µ—Ç—Å—è, —è —Å–ª—ã—à—É —Ü–≤–µ—Ç–∞...",
                    "–ú–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –º–Ω–µ –±—É—Ç—ã–ª–∫—É –≤–æ–¥—ã?"
                ],
                "dialogue_complete": "–ê—Ö, –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏—è. –ß—É–≤—Å—Ç–≤—É—é —Å–µ–±—è... —á—É—Ç—å –±–æ–ª–µ–µ —á–µ–ª–æ–≤–µ–∫–æ–º.",
                "user_feedback": [
                    "üíß –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–¥—É! –¢–µ–ø–µ—Ä—å –º–æ–≥—É –∫–æ–¥–∏—Ç—å –¥–∞–ª—å—à–µ!",
                    "–ì–∏–¥—Ä–∞—Ç–∞—Ü–∏—è - –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É! –°–ø–∞—Å–∏–±–æ!",
                    "–í–æ–¥–∞ —Å–ø–∞—Å–ª–∞ –º–æ–π –¥–µ–Ω—å! –¢–µ–ø–µ—Ä—å –≤—Å–µ —Ö–æ—Ä–æ—à–æ!"
                ],
                "type": "fetch",
                "item_to_fetch": "water_bottle",
                "reward": {"users": 300, "item": "Energy Drink"}
            },
            # –ù–æ–≤—ã–µ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∫–≤–µ—Å—Ç—ã
            "quest_student_coffee": {
                "id": "quest_student_coffee",
                "npc_id": "coffee_student",
                "title": "–ö–æ—Ñ–µ–π–Ω—ã–π –∫–ª–∏–∫–µ—Ä",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–µ–Ω –∫–æ—Ñ–µ! –ú–Ω–æ–≥–æ –∫–æ—Ñ–µ!",
                    "–ö–ª–∏–∫–Ω–∏ 50 —Ä–∞–∑ –∑–∞ 30 —Å–µ–∫—É–Ω–¥!"
                ],
                "dialogue_complete": "–ö–æ—Ñ–µ –≥–æ—Ç–æ–≤! –¢–µ–ø–µ—Ä—å —è –º–æ–≥—É –∫–æ–¥–∏—Ç—å!",
                "user_feedback": [
                    "‚òï –ö–æ—Ñ–µ —Å–ø–∞—Å –º–æ–π –¥–µ–Ω—å! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è –ø–æ–ª–æ–Ω —ç–Ω–µ—Ä–≥–∏–∏! –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!",
                    "–ö–æ—Ñ–µ - –ª—É—á—à–∏–π –¥—Ä—É–≥ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞!"
                ],
                "type": "clicker",
                "clicks_needed": 50,
                "time_limit": 30,
                "reward": {"users": 200, "item": "Coffee"}
            },
            "quest_student_coding": {
                "id": "quest_student_coding",
                "npc_id": "coding_student",
                "title": "–ü–æ–π–º–∞–π –∫–æ—Ç–∏–∫–∞!",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–µ–Ω –∫–æ—Ç–∏–∫ –¥–ª—è –º–æ–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞!",
                    "–ü–æ–π–º–∞–π –≤—Å–µ—Ö –∫–æ—Ç–∏–∫–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–µ!"
                ],
                "dialogue_complete": "–ö–æ—Ç–∏–∫–∏ –ø–æ–π–º–∞–Ω—ã! –ü—Ä–æ–µ–∫—Ç —Å–ø–∞—Å–µ–Ω!",
                "user_feedback": [
                    "üê± –ö–æ—Ç–∏–∫–∏ —Å–ø–∞—Å–µ–Ω—ã! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —É –º–µ–Ω—è –µ—Å—Ç—å –∫–æ—Ç–∏–∫–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞!",
                    "–ö–æ—Ç–∏–∫–∏ - –ª—É—á—à–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤—â–∏–∫–∏!"
                ],
                "type": "minigame",
                "minigame_id": "treasure_collector",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—à—É –Ω–æ–≤—É—é –∏–≥—Ä—É —Å –∫–æ—Ç–∏–∫–∞–º–∏
                "reward": {"users": 400, "item": "Cat Certificate"}
            },
            "quest_student_hungry": {
                "id": "quest_student_hungry",
                "npc_id": "hungry_student",
                "title": "–ì–æ–ª–æ–¥–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç",
                "dialogue_start": [
                    "–Ø –≥–æ–ª–æ–¥–µ–Ω! –û—á–µ–Ω—å –≥–æ–ª–æ–¥–µ–Ω!",
                    "–ü—Ä–∏–Ω–µ—Å–∏ –º–Ω–µ –ø–∏—Ü—Ü—É!"
                ],
                "dialogue_complete": "–ü–∏—Ü—Ü–∞! –°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —è –º–æ–≥—É —Ä–∞–±–æ—Ç–∞—Ç—å!",
                "user_feedback": [
                    "üçï –ü–∏—Ü—Ü–∞ —Å–ø–∞—Å–ª–∞ –º–æ–π –¥–µ–Ω—å! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è —Å—ã—Ç –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!",
                    "–ü–∏—Ü—Ü–∞ - –ª—É—á—à–∞—è –µ–¥–∞ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞!"
                ],
                "type": "fetch",
                "item_to_fetch": "pizza",
                "reward": {"users": 250, "item": "Pizza"}
            },
            "quest_student_sleepy": {
                "id": "quest_student_sleepy",
                "npc_id": "sleepy_student",
                "title": "–°–æ–Ω–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç",
                "dialogue_start": [
                    "–Ø —Ç–∞–∫ —É—Å—Ç–∞–ª...",
                    "–ù–∞–π–¥–∏ –º–Ω–µ –ø–æ–¥—É—à–∫—É!"
                ],
                "dialogue_complete": "–ü–æ–¥—É—à–∫–∞! –¢–µ–ø–µ—Ä—å —è –º–æ–≥—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å!",
                "user_feedback": [
                    "üõèÔ∏è –ü–æ–¥—É—à–∫–∞ —Å–ø–∞—Å–ª–∞ –º–æ–π —Å–æ–Ω! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è –æ—Ç–¥–æ—Ö–Ω—É –∏ –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å –ª—É—á—à–µ!",
                    "–°–æ–Ω - –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è!"
                ],
                "type": "fetch",
                "item_to_fetch": "pillow",
                "reward": {"users": 150, "item": "Pillow"}
            },
            "quest_student_gaming": {
                "id": "quest_student_gaming",
                "npc_id": "gaming_student",
                "title": "–ì–µ–π–º–µ—Ä—Å–∫–∏–π –∫–ª–∏–∫–µ—Ä",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–∫–∞—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!",
                    "–ö–ª–∏–∫–Ω–∏ 100 —Ä–∞–∑ –∑–∞ 20 —Å–µ–∫—É–Ω–¥!"
                ],
                "dialogue_complete": "–ü–µ—Ä—Å–æ–Ω–∞–∂ –ø—Ä–æ–∫–∞—á–∞–Ω! –¢–µ–ø–µ—Ä—å —è —Å–∏–ª—å–Ω—ã–π!",
                "user_feedback": [
                    "üéÆ –ü–µ—Ä—Å–æ–Ω–∞–∂ –ø—Ä–æ–∫–∞—á–∞–Ω! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è —Å–∏–ª—å–Ω—ã–π –≥–µ–π–º–µ—Ä!",
                    "–ì–µ–π–º–∏—Ñ–∏–∫–∞—Ü–∏—è - –±—É–¥—É—â–µ–µ –æ–±—É—á–µ–Ω–∏—è!"
                ],
                "type": "clicker",
                "clicks_needed": 100,
                "time_limit": 20,
                "reward": {"users": 350, "item": "Gaming Certificate"}
            },
            "quest_student_music": {
                "id": "quest_student_music",
                "npc_id": "music_student",
                "title": "–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Ä–∏—Ç–º",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–Ω–∞ –º—É–∑—ã–∫–∞ –¥–ª—è –∫–æ–¥–∏–Ω–≥–∞!",
                    "–ü–æ–ø–∞–¥–∏ –≤ —Ä–∏—Ç–º - –∫–ª–∏–∫–∞–π –≤ —Ç–∞–∫—Ç!"
                ],
                "dialogue_complete": "–û—Ç–ª–∏—á–Ω—ã–π —Ä–∏—Ç–º! –ú—É–∑—ã–∫–∞ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç!",
                "user_feedback": [
                    "üéµ –ú—É–∑—ã–∫–∞ —Å–ø–∞—Å–ª–∞ –º–æ–π –∫–æ–¥! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è –∫–æ–¥–∏—Ä—É—é –ø–æ–¥ —Ä–∏—Ç–º!",
                    "–ú—É–∑—ã–∫–∞ - –ª—É—á—à–∏–π –ø–æ–º–æ—â–Ω–∏–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞!"
                ],
                "type": "rhythm",
                "beats_needed": 20,
                "time_limit": 30,
                "reward": {"users": 300, "item": "Music Certificate"}
            },
            "quest_student_sport": {
                "id": "quest_student_sport",
                "npc_id": "sport_student",
                "title": "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–Ω–æ —Ä–∞–∑–º—è—Ç—å—Å—è!",
                    "–°–¥–µ–ª–∞–π 30 –æ—Ç–∂–∏–º–∞–Ω–∏–π (–∫–ª–∏–∫–æ–≤)!"
                ],
                "dialogue_complete": "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —è –≤ —Ñ–æ—Ä–º–µ!",
                "user_feedback": [
                    "üí™ –°–ø–æ—Ä—Ç —Å–ø–∞—Å –º–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è —Å–∏–ª—å–Ω—ã–π –∏ –∑–¥–æ—Ä–æ–≤—ã–π!",
                    "–°–ø–æ—Ä—Ç - –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –∂–∏–∑–Ω–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞!"
                ],
                "type": "clicker",
                "clicks_needed": 30,
                "time_limit": 45,
                "reward": {"users": 200, "item": "Sport Certificate"}
            },
            "quest_student_art": {
                "id": "quest_student_art",
                "npc_id": "art_student",
                "title": "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–∫—É—Å",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–µ–Ω –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–∏–π –∞—Ä—Ç!",
                    "–ù–∞–π–¥–∏ –∫—Ä–∞—Å–∏–≤—ã–µ —Ü–≤–µ—Ç–∞!"
                ],
                "dialogue_complete": "–ö—Ä–∞—Å–∏–≤—ã–µ —Ü–≤–µ—Ç–∞! –¢–µ–ø–µ—Ä—å —è –≤–¥–æ—Ö–Ω–æ–≤–ª–µ–Ω!",
                "user_feedback": [
                    "üé® –ê—Ä—Ç –≤–¥–æ—Ö–Ω–æ–≤–∏–ª –º–µ–Ω—è! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è —Å–æ–∑–¥–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã!",
                    "–ê—Ä—Ç - –≤–∞–∂–Ω–∞—è —á–∞—Å—Ç—å –¥–∏–∑–∞–π–Ω–∞!"
                ],
                "type": "color_picker",
                "colors_needed": 5,
                "time_limit": 60,
                "reward": {"users": 250, "item": "Art Certificate"}
            },
            "quest_student_book": {
                "id": "quest_student_book",
                "npc_id": "book_student",
                "title": "–ö–Ω–∏–∂–Ω—ã–π —á–µ—Ä–≤—å",
                "dialogue_start": [
                    "–ú–Ω–µ –Ω—É–∂–Ω–∞ –Ω–æ–≤–∞—è –∫–Ω–∏–≥–∞ –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é!",
                    "–ü—Ä–∏–Ω–µ—Å–∏ –º–Ω–µ –∫–Ω–∏–≥—É!"
                ],
                "dialogue_complete": "–ö–Ω–∏–≥–∞! –¢–µ–ø–µ—Ä—å —è —É–º–Ω–µ–µ!",
                "user_feedback": [
                    "üìö –ö–Ω–∏–≥–∞ —Ä–∞—Å—à–∏—Ä–∏–ª–∞ –º–æ–∏ –∑–Ω–∞–Ω–∏—è! –°–ø–∞—Å–∏–±–æ!",
                    "–¢–µ–ø–µ—Ä—å —è –∑–Ω–∞—é –±–æ–ª—å—à–µ!",
                    "–ö–Ω–∏–≥–∏ - –ª—É—á—à–∏–µ —É—á–∏—Ç–µ–ª—è!"
                ],
                "type": "fetch",
                "item_to_fetch": "book",
                "reward": {"users": 180, "item": "Book"}
            }
        }
    
    def start_quest(self, quest_id, player):
        """Start a quest"""
        if quest_id in self.quests_data and quest_id not in self.active_quests:
            quest = self.quests_data[quest_id].copy()
            self.active_quests[quest_id] = quest
            if quest_id not in player.quest_log:
                player.quest_log.append(quest_id)
            
            # Play quest start sound
            sound_manager = get_sound_manager()
            if sound_manager:
                sound_manager.play_quest_start()
            
            return True
        return False
    
    def check_completion(self, quest_id, player):
        """Check if quest completion conditions are met"""
        if quest_id not in self.active_quests:
            return False
            
        quest = self.active_quests[quest_id]
        
        if quest["type"] == "fetch":
            required_item = quest.get("item_to_fetch")
            return player.has_item(required_item)
        elif quest["type"] == "minigame":
            # Minigame completion is handled separately
            return quest.get("completed", False)
        elif quest["type"] == "clicker":
            # Clicker completion is handled separately
            return quest.get("completed", False)
        elif quest["type"] == "rhythm":
            # Rhythm completion is handled separately
            return quest.get("completed", False)
        elif quest["type"] == "color_picker":
            # Color picker completion is handled separately
            return quest.get("completed", False)
        elif quest["type"] == "boss_battle":
            # Boss battle completion is handled separately
            return quest.get("completed", False)
        
        return False
    
    def complete_quest(self, quest_id, player):
        """Complete a quest and give rewards"""
        if quest_id not in self.active_quests:
            return False
            
        quest = self.active_quests[quest_id]
        
        # Get improved rewards from improvement system
        try:
            from improvements import get_improvement_manager
            improvement_manager = get_improvement_manager()
            
            if improvement_manager:
                # Determine difficulty based on quest type
                difficulty = "normal"
                if "boss" in quest_id.lower():
                    difficulty = "boss"
                elif "final" in quest_id.lower():
                    difficulty = "hard"
                
                # Get enhanced reward
                reward_data = improvement_manager.reward_system.give_reward(quest_id, difficulty)
                users_gained = reward_data["users"]
                item = reward_data.get("item")
                
                # Apply reward
                player.current_users += users_gained
                
                # Add item to player inventory if received
                if item and hasattr(player, 'inventory'):
                    if not hasattr(player, 'inventory'):
                        player.inventory = []
                    player.inventory.append(item)
                
                # Show reward animation
                improvement_manager.show_reward_animation("–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", users_gained)
                if item:
                    improvement_manager.show_reward_animation("–ø—Ä–µ–¥–º–µ—Ç", item.name)
                
                # Update progress tracking
                improvement_manager.progress_tracker.update_quest_progress(quest_id, completed=True)
                
                print(f"‚úÖ –ö–≤–µ—Å—Ç {quest_id} –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–ª—É—á–µ–Ω–æ {users_gained} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
                if item:
                    print(f"üéÅ –ü–æ–ª—É—á–µ–Ω –ø—Ä–µ–¥–º–µ—Ç: {item.name}")
                
                # Remove from active and add to completed
                del self.active_quests[quest_id]
                if quest_id in player.quest_log:
                    player.quest_log.remove(quest_id)
                self.completed_quests.append(quest_id)
                
                # Play quest completion sound
                sound_manager = get_sound_manager()
                if sound_manager:
                    sound_manager.play_quest_complete()
                
                return True
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —É–ª—É—á—à–µ–Ω–∏–π: {e}")
        
        # Fallback to original reward system
        reward = quest.get("reward", {})
        
        # Give rewards
        if "users" in reward:
            player.current_users += reward["users"]
        if "item" in reward:
            if hasattr(player, 'add_item'):
                player.add_item(reward["item"])
            
        # Remove from active and add to completed
        del self.active_quests[quest_id]
        if quest_id in player.quest_log:
            player.quest_log.remove(quest_id)
        self.completed_quests.append(quest_id)
        
        # Play quest completion sound
        sound_manager = get_sound_manager()
        if sound_manager:
            sound_manager.play_quest_complete()
        
        return True
    
    def get_quest_data(self, quest_id):
        """Get quest data by ID"""
        return self.quests_data.get(quest_id)
    
    def mark_minigame_completed(self, quest_id):
        """Mark minigame quest as completed"""
        if quest_id in self.active_quests:
            self.active_quests[quest_id]["completed"] = True 