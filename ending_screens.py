import pygame
import os
from settings import *

class EndingScreen:
    def __init__(self, screen, is_victory=True):
        self.screen = screen
        self.is_victory = is_victory
        self.clock = pygame.time.Clock()
        
        # Load ending images
        self.load_ending_images()
        
        # Fonts
        self.font_large = pygame.font.Font(None, 72)
        self.font_medium = pygame.font.Font(None, 48)
        self.font_small = pygame.font.Font(None, 32)
        
        # Animation
        self.alpha = 0
        self.fade_speed = 2
        
    def load_ending_images(self):
        """Load ending images"""
        try:
            if self.is_victory:
                image_path = os.path.join("Mentors", "main_good.jpg")
                self.ending_image = pygame.image.load(image_path)
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ö–æ—Ä–æ—à–µ–π –∫–æ–Ω—Ü–æ–≤–∫–∏: {image_path}")
            else:
                image_path = os.path.join("Mentors", "main_bad.jpg")
                self.ending_image = pygame.image.load(image_path)
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–ª–æ—Ö–æ–π –∫–æ–Ω—Ü–æ–≤–∫–∏: {image_path}")
            
            # Scale image to fit screen
            self.ending_image = pygame.transform.scale(self.ending_image, (SCREEN_WIDTH, SCREEN_HEIGHT))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–Ω—Ü–æ–≤–∫–∏: {e}")
            # Fallback
            self.ending_image = pygame.Surface((SCREEN_WIDTH, SCREEN_HEIGHT))
            self.ending_image.fill(GREEN if self.is_victory else RED)
    
    def get_ending_text(self):
        """Get ending text based on victory/defeat"""
        if self.is_victory:
            return [
                "üèÜ –ü–û–ë–ï–î–ê! üèÜ",
                "",
                "–¢—ã –ø–æ–±–µ–¥–∏–ª –ê—Å—Å–µ–ª—å –≤ —ç–ø–∏—á–µ—Å–∫–æ–π –±–∏—Ç–≤–µ!",
                "–¢–≤–æ–π —Å—Ç–∞—Ä—Ç–∞–ø —Å—Ç–∞–ª –ª–µ–≥–µ–Ω–¥–æ–π –≤ –º–∏—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.",
                "",
                "üéâ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è:",
                "‚Ä¢ –ü–æ–±–µ–¥–∏–ª —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –±–æ—Å—Å–∞",
                "‚Ä¢ –ü—Ä–∏–≤–ª–µ–∫ 10,000+ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                "‚Ä¢ –°—Ç–∞–ª –ª—É—á—à–∏–º —Å—Ç–∞—Ä—Ç–∞–ø–µ—Ä–æ–º",
                "‚Ä¢ –ü–æ–ª—É—á–∏–ª –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –æ—Ç –≤—Å–µ—Ö —Ñ–æ–Ω–¥–æ–≤",
                "",
                "üåü –¢—ã –¥–æ–∫–∞–∑–∞–ª, —á—Ç–æ –º–æ–∂–µ—à—å:",
                "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã",
                "‚Ä¢ –°–æ–±–∏—Ä–∞—Ç—å —Å–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É",
                "‚Ä¢ –ü–æ–±–µ–∂–¥–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ–π –±–æ—Ä—å–±–µ",
                "‚Ä¢ –î–æ—Å—Ç–∏–≥–∞—Ç—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ–≥–æ!",
                "",
                "üöÄ –¢–≤–æ–π —Å—Ç–∞—Ä—Ç–∞–ø —Ç–µ–ø–µ—Ä—å:",
                "‚Ä¢ –õ–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞",
                "‚Ä¢ –ú—É–ª—å—Ç–∏–º–∏–ª–ª–∏–∞—Ä–¥–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è",
                "‚Ä¢ –ü—Ä–∏–º–µ—Ä –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π",
                "",
                "–ù–∞–∂–º–∏ ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞"
            ]
        else:
            return [
                "üíÄ –ü–û–†–ê–ñ–ï–ù–ò–ï üíÄ",
                "",
                "–ê—Å—Å–µ–ª—å –æ–∫–∞–∑–∞–ª–∞—Å—å —Å–∏–ª—å–Ω–µ–µ...",
                "–¢–≤–æ–π —Å—Ç–∞—Ä—Ç–∞–ø –Ω–µ –≤—ã–¥–µ—Ä–∂–∞–ª –∏—Å–ø—ã—Ç–∞–Ω–∏—è.",
                "",
                "üòî –ß—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:",
                "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                "‚Ä¢ –°–ª–∞–±–∞—è –∫–æ–º–∞–Ω–¥–∞",
                "‚Ä¢ –ü–ª–æ—Ö–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è",
                "‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞",
                "",
                "üí° –£—Ä–æ–∫–∏ –Ω–∞ –±—É–¥—É—â–µ–µ:",
                "‚Ä¢ –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è",
                "‚Ä¢ –°–æ–±–∏—Ä–∞—Ç—å —Å–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É",
                "‚Ä¢ –ò–∑—É—á–∞—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤",
                "‚Ä¢ –ù–µ —Å–¥–∞–≤–∞—Ç—å—Å—è –ø—Ä–∏ –Ω–µ—É–¥–∞—á–∞—Ö",
                "",
                "üîÑ –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:",
                "‚Ä¢ –ù–∞–±–µ—Ä–∏ –±–æ–ª—å—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
                "‚Ä¢ –£–ª—É—á—à–∏ –Ω–∞–≤—ã–∫–∏",
                "‚Ä¢ –ò–∑—É—á–∏ –≤—Å–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
                "‚Ä¢ –ò –≤–µ—Ä–Ω–∏—Å—å —Å–∏–ª—å–Ω–µ–µ!",
                "",
                "–ù–∞–∂–º–∏ ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞"
            ]
    
    def draw_ending_screen(self):
        """Draw the ending screen"""
        # Draw background image
        self.screen.blit(self.ending_image, (0, 0))
        
        # Create overlay for text readability
        overlay = pygame.Surface((SCREEN_WIDTH, SCREEN_HEIGHT))
        overlay.set_alpha(128)
        overlay.fill(BLACK)
        self.screen.blit(overlay, (0, 0))
        
        # Draw text
        ending_text = self.get_ending_text()
        y_offset = 100
        
        for line in ending_text:
            if line.startswith("üèÜ") or line.startswith("üíÄ"):
                color = (255, 215, 0) if self.is_victory else (255, 0, 0)
                font = self.font_large
            elif line.startswith("üéâ") or line.startswith("üòî"):
                color = (255, 200, 100) if self.is_victory else (255, 100, 100)
                font = self.font_medium
            elif line.startswith("‚Ä¢"):
                color = (200, 200, 200)
                font = self.font_small
            elif line.startswith("üåü") or line.startswith("üí°") or line.startswith("üîÑ"):
                color = (100, 255, 100) if self.is_victory else (255, 150, 100)
                font = self.font_medium
            elif line.startswith("üöÄ"):
                color = (100, 200, 255)
                font = self.font_medium
            else:
                color = (150, 150, 150)
                font = self.font_small
            
            text_surface = font.render(line, True, color)
            text_rect = text_surface.get_rect(center=(SCREEN_WIDTH // 2, y_offset))
            self.screen.blit(text_surface, text_rect)
            y_offset += 40
    
    def run(self):
        """Run the ending screen"""
        print(f"üé¨ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º {'—Ö–æ—Ä–æ—à—É—é' if self.is_victory else '–ø–ª–æ—Ö—É—é'} –∫–æ–Ω—Ü–æ–≤–∫—É")
        
        while True:
            dt = self.clock.tick(60) / 1000.0
            
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    return "exit"
                elif event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_ESCAPE:
                        return "menu"
            
            self.draw_ending_screen()
            pygame.display.flip() 